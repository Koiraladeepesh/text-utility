{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","aria-checked","role","htmlFor","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","navigator","clipboard","writeText","split","join","filter","element","defaultProps","about","Alert","height","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","document","body","components_Alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.3fbb1994.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        {/* <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link> */}\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">Home</Link> */}\r\n              <a className=\"nav-link\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"about\">{props.about}</Link>\r\n            </li> */}\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-3`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" aria-checked=\"mixed\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes =  {\r\n    title: PropTypes.string.isRequired,\r\n    about: PropTypes.string.isRequired\r\n}\r\n\r\n Navbar.defaultProps = {\r\n     title: 'Set title here',\r\n     about: 'About'\r\n }\r\n\r\n","import React, {useState} from 'react'\r\n\r\n\r\nexport default function TextForm(props) { \r\n    const handleUpClick = ()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Uppercase!\", \"success\");\r\n\r\n    }\r\n\r\n    const handleLowClick = ()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lowercase!\", \"success\");\r\n\r\n    }\r\n\r\n    const handleClearClick = ()=>{\r\n        let newText = '';\r\n        setText(newText)\r\n        props.showAlert(\"Text Cleared!\", \"success\");\r\n\r\n    }\r\n\r\n    const handleExtraSpaces = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra Spaces Removed!\", \"success\");\r\n\r\n    }\r\n\r\n    const handleOnChange = (event)=>{\r\n        setText(event.target.value)\r\n    }\r\n\r\n    const handleCopy = () =>{\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Copied to Clipboard!\", \"success\");\r\n\r\n    }\r\n\r\n    const [text, setText] = useState('');\r\n    return (\r\n    <>\r\n    <div className='container' style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h1 className='mb-4'>{props.heading}</h1>\r\n        <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#13466e':'white', color: props.mode==='dark'?'white':'black'}} id=\"myBox\" rows=\"8\"></textarea>\r\n        </div>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleLowClick}>Convert to Lowercase</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleCopy}>Copy Text</button>\r\n        <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(/\\s+/).filter((element)=>{return element.length!==0}).length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Nothing to preview!\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    <div style={{height : '50px'}}>\r\n    {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, {useState} from 'react';\nimport Alert from './components/Alert';\n// import {\n//    BrowserRouter as Router,\n//    Routes,\n//    Route,\n//  } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    }, 1500)\n  }\n  const toggleMode = ()=>{\n    if(mode === 'light'){\n      setMode('dark');\n      document.body.style.backgroundColor = '#0d1e2d';\n      showAlert(\"Dark mode has been enabled\",  \"success\");\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode has been enabled\",  \"success\");\n    }\n  }\n  return (\n    <>\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    {/* <Router>\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    <Routes>\n          <Route path=\"/about\" element={<About mode={mode}/>}/>\n          <Route path=\"/\" element={<TextForm showAlert={showAlert} heading=\"Try TextUtils - Word Counter, Character Counter, Remove extra Spaces\" mode={mode}/>\n}/>\n    </Routes>\n    </div>\n    </Router> */}\n    {<TextForm showAlert={showAlert} heading=\"Try TextUtils - Word Counter, Character Counter, Remove extra Spaces\" mode={mode}/>\n}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}